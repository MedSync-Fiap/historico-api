extend type Mutation {
    saveNewAppointment(newAppointmentInput: AppointmentInput!): MedicalHistoryResponse!
    updateAppointment(updateAppointmentInput: AppointmentInput!): MedicalHistoryResponse!
    createPatient(patientInput: PatientInput!): PatientResponse!
    updatePatient(patientId: ID!, patientInput: PatientInput!): PatientResponse!
}

input AppointmentInput {
    consultaId: ID!
    dataHora: String!
    status: String!
    observacoes: String
    tipoEvento: String!
    timestamp: String!
    
    # Apenas ID do paciente - o historico-api validará se existe
    pacienteId: ID!
    
    # Dados completos do médico
    medicoId: ID!
    medicoNome: String!
    medicoCpf: String!
    medicoEmail: String!
    
    # Dados completos da especialidade
    especialidadeId: ID!
    especialidadeNome: String!
    
    # Dados completos do usuário
    usuarioId: ID!
    usuarioNome: String!
    usuarioEmail: String!
    usuarioRole: String!
}

input PatientInput {
    nome: String!
    cpf: String!
    email: String!
    dataNascimento: String!
    observacoes: String
}

type PatientResponse {
    id: ID!
    nome: String!
    cpf: String!
    email: String!
    dataNascimento: String!
    observacoes: String
    ativo: Boolean!
    criadoEm: String!
    atualizadoEm: String
}